type Cred @model @auth(rules: [{allow: public}]) {
  id: ID!
  acc: String
  sec: String
}

type Tasks @model @auth(rules: [{allow: public}]) @key(name: "byRecommendations", fields: ["recommendationsID"]) {
  id: ID!
  taskName: String
  taskDesc: String
  taskStar: AWSDate
  RecommendationTask: Recommendations @connection
  taskEnd: AWSDate
  recommendationsID: ID
  assignedTo: String
}

type Recommendations @model @auth(rules: [{allow: public}]) {
  id: ID!
  recName: String
  recDesc: String
  RecommendationTasks: [Tasks] @connection(keyName: "byRecommendations", fields: ["id"])
  recDuration: String
  recNum: String
  isApproved: Boolean
}

type AssessorReport @model @auth(rules: [{allow: public}]) @key(name: "byAssessor", fields: ["assessorID"]) {
  id: ID!
  assrssorComment: String
  assessmentResult: String
  Assessor: Assessor @connection
  assessorID: ID
  QuestionnaireQuestionAnswers: [QuestionnaireQuestionAnswer] @connection(keyName: "byAssessorReport", fields: ["id"])
}

type Assessor @model @auth(rules: [{allow: public}]) {
  id: ID!
  first_name: String
  last_name: String
  email: String
  numAssessed: String
  AssessorReports: [AssessorReport] @connection(keyName: "byAssessor", fields: ["id"])
}

type QuestionnaireQuestionAnswer @model @auth(rules: [{allow: public}]) @key(name: "byQuestion", fields: ["questionID"]) @key(name: "byAssessorReport", fields: ["assessorreportID"]) {
  id: ID!
  questionID: ID
  answerID: String
  questionnaireID: String
  Answers: [Answer] @connection(keyName: "byQuestionnaireQuestionAnswer", fields: ["id"])
  Questions: [Question] @connection(keyName: "byQuestionnaireQuestionAnswer", fields: ["id"])
  Questionnaire: Questionnaire @connection
  assessorreportID: ID
}

type Answer @model @auth(rules: [{allow: public}]) @key(name: "byQuestionnaire", fields: ["questionnaireID"]) @key(name: "byQuestion", fields: ["questionID"]) @key(name: "byQuestionnaireQuestionAnswer", fields: ["questionnairequestionanswerID"]) {
  id: ID!
  answer: String
  Questionnaire: QuestionnaireQuestionAnswer @connection
  questionnaireID: ID
  Question: QuestionnaireQuestionAnswer @connection
  questionID: ID
  QuestionnaireQuestionAnswer: QuestionnaireQuestionAnswer @connection
  questionnairequestionanswerID: ID
}

type Question @model @auth(rules: [{allow: public}]) @key(name: "byQuestionnaireQuestionAnswer", fields: ["questionnairequestionanswerID"]) {
  id: ID!
  question: String
  questionName: String
  Answers: [Answer] @connection(keyName: "byQuestion", fields: ["id"])
  QuestionnaireQuestionAnswers: [QuestionnaireQuestionAnswer] @connection(keyName: "byQuestion", fields: ["id"])
  questionnairequestionanswerID: ID
}

type Questionnaire @model @auth(rules: [{allow: public}]) {
  id: ID!
  questionaireCompleted: Boolean
  questionnaireQuestionanswerID: ID
  User: User @connection
  userId: ID
  Answers: [Answer] @connection(keyName: "byQuestionnaire", fields: ["id"])
  QuestionnaireQuestionAnswer: QuestionnaireQuestionAnswer @connection
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  first_name: String
  last_name: String
  email: String
  job_title: String
  company: String
  employees: String
  industry: String
  country: String
  Questionnaire: QuestionnaireQuestionAnswer @connection
}

type File @model @auth(rules: [{allow: public}]) {
  data: String
}
 